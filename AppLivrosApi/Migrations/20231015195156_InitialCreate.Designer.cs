// <auto-generated />
using AppLivrosApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppLivrosApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231015195156_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("AppLivrosApi.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Check")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PageIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageTotal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("AppLivrosApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "tecnologia.png",
                            Name = "Tecnologia",
                            Slug = "tecnologia"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "romance.png",
                            Name = "Romance",
                            Slug = "romance"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "misterio.png",
                            Name = "Mistério",
                            Slug = "misterio"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "ficcao.png",
                            Name = "Ficção Científica",
                            Slug = "ficcao-cientifica"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "fantasia.png",
                            Name = "Fantasia",
                            Slug = "fantasia"
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "naoficcao.png",
                            Name = "Não Ficção",
                            Slug = "nao-ficcao"
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "aventura.png",
                            Name = "Aventura",
                            Slug = "aventura"
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "biografia.png",
                            Name = "Biografia",
                            Slug = "biografia"
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "historia.png",
                            Name = "História",
                            Slug = "historia"
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "autoajuda.png",
                            Name = "Autoajuda",
                            Slug = "autoajuda"
                        },
                        new
                        {
                            Id = 11,
                            ImageUrl = "policial.png",
                            Name = "Policial",
                            Slug = "policial"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
